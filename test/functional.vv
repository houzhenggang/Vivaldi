require "assert"

// As stupid as possible, to maximize pressure on VM
fn factorial(x): do
  if x == 0: return 1
  x * factorial(x - 1)
end

fn recursion(): do
  let i = factorial(10)
  assert(i == 3628800, "factorial(10) == 3628800")
  let j = factorial(11)
  assert(j == i * 11, "factorial(11) == factorial(10) * 11")
end

fn partial_application(): do
  fn is_div_by(a, b): b % a == 0
  let is_even = is_div_by.bind(2)
  assert(is_even(4) == true, "is_even(4) == true")
  assert(is_even(1) == false, "is_even(1) == false")

  let ret_true = is_even.bind(2)
  assert(ret_true() == true, "ret_true() == true")
end

section("Functional Stuff")

test(recursion, "recursive factorial")
test(partial_application, "partial application")
